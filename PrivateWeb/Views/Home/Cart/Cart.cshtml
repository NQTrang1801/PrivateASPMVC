@{
    ViewData["Title"] = "Cart";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="~/home/styles/pages/cart.css">
    <link rel="stylesheet" href="~/home/styles/pages/media-cart.css">
}

<main class="main-cart">

    <partial name="_cartDataPartial.cshtml" />
 

</main>


@section Scripts {
    <script>
        $(document).ready(function () {
            const divData = $('.items-cart');
            const options = { weekday: 'long', month: 'long', day: 'numeric' };
            const dateFormatter = new Intl.DateTimeFormat('en-US', options);

            const currentDate = new Date();
            const year = currentDate.getFullYear();
            const month = currentDate.getMonth() + 1;
            const day = currentDate.getDate();
            cart.date = { year: year, month: month, day: day };
            localStorage.setItem("cart", JSON.stringify(cart));
            renderCart();

            $('.item-quantity').each(function () {
                const domQTY = $(this).find("span");
                $(this).find("button").eq(0).on("click", function () {
                    const index = $(this).data("index");
                    const domTotalCost = $(`.total-cart-${index}`);
                    if (Number(domQTY.text()) > 1) {
                        const product = cart[index];
                        product.QuantityPurchased--;
                        localStorage.setItem("cart", JSON.stringify(cart));
                        domQTY.text(Number(domQTY.text()) - 1);
                        if (product.ProductPromoValue == null)
                            product.ProductPromoValue = 0;
                        domTotalCost.text(product.price * (1 - product.ProductPromoValue/100) * product.QuantityPurchased);
                        renderSumary();
                        renderDropDownCart();
                    }
                });

                $(this).find("button").eq(1).on("click", function () {
                    const index = $(this).data("index");
                    const domTotalCost = $(`.total-cart-${index}`);
                    const product = cart[index];
                    product.QuantityPurchased++;
                    localStorage.setItem("cart", JSON.stringify(cart));
                    domQTY.text(Number(domQTY.text()) + 1);
                    if (product.ProductPromoValue == null)
                        product.ProductPromoValue = 0;
                    domTotalCost.text(product.price * (1 - product.ProductPromoValue/100) * product.QuantityPurchased);
                    renderSumary();
                    renderDropDownCart();
                });
            });

            $(document).on('click', '.ri-close-line', function () {
                const index = $(this).data("index");
                cart.splice(index, 1);
                localStorage.setItem("cart", JSON.stringify(cart));
                location.reload();
            });

            function renderCart() {
                const divData = $('.items-cart');
                divData.empty();
                let indexItem = 0;

                cart.forEach(item => {
                    let shipingDate = new Date(currentDate);
                    shipingDate.setDate(currentDate.getDate() + 7);

                    let promoValue = '';
                    let discountPrice = '';

                    if (item.ProductPromoValue != null) {
                        if (!isNaN(item.ProductPromoValue)) {
                            promoValue = item.ProductPromoValue;
                            discountPrice = (item.price * Number(item.ProductPromoValue) / 100).toLocaleString('en-US');
                        } else {
                            promoValue = 'Invalid value';
                            discountPrice = '0';
                        }
                    }

                    const formattedTotal = (item.ProductPromoValue != null) ?
                        (item.price * (1 - promoValue / 100) * item.QuantityPurchased).toLocaleString('en-US') :
                        '';

                    const htmlContent = `
                    <div class="item-wrapper js-index-item-${indexItem}">
                        <div>
                            <img src="/UploadHome/product/variantss/thumb/${item.image}" alt="" width="100%">
                        </div>
                        <div>
                            <div class="item-attb">
                                <a href="#">${item.title}</a>
                                <p>Color: <span>${item.ColorName}</span></p>
                                <p>Size: <span>${item.SizeName}</span></p>
                                <p>#<span>${item.productId}</span></p>
                            </div>
                            ${item.ProductPromoValue != null ? `<p class="item-sale">Enjoy ${promoValue}% Off Select Styles</p>` : ''}
                            <div class="item-quantity">
                                 <button data-index="${indexItem}">-</button>
                                 <p>QTY: <span>${item.QuantityPurchased}</span></p>
                                 <button data-index="${indexItem}">+</button>
                            </div>
                        </div>
                        <div>
                            <div class="item-interact">
                                   <a href="/Products/UpdateCart?indexCart=${indexItem}&productId=${item.productId}">
                                        <i class="ri-pencil-line"></i>
                                  </a>
                                  <i class="ri-heart-line"></i>
                                  <i class="ri-close-line" data-product-id="${item.productId}" data-index="${indexItem}"></i>
                            </div>
                            <div class="price-container">
                                 <p>$<span class="price-cart">${item.price.toLocaleString('en-US')}</span></p>
                                <div class="inf-sale">
                                    <div>
                                        ${item.ProductPromoValue != null ? `<p class="item-sale">Enjoy ${promoValue}% Off Select Styles</p>` : ''}
                                        ${item.ProductPromoValue != null ? `<p>-$<span class="price-sale">${discountPrice}</span></p>` : ''}
                                    </div>
                                </div>
                                                <p>${item.ProductPromoValue != null ? `$<span class="total-cart-${indexItem}">${formattedTotal}</span>` : `$<span class="total-cart-${indexItem}">${(item.price*item.QuantityPurchased).toLocaleString('en-US')}</span>`}</p>
                            </div>
                        </div>
                    </div>
                `;

                    divData.append(htmlContent);
                    indexItem++;
                });

                renderSumary();
                renderDropDownCart();
            }

            function sumCartTotal() {
                let total = 0;

                cart.forEach(item => {
                    const promoValue = (item.ProductPromoValue && !isNaN(item.ProductPromoValue)) ? item.ProductPromoValue : 0;
                    total += item.price * (1 - promoValue / 100) * item.QuantityPurchased;
                });

                return total;
            }

            function renderSumary() {
                const divSumary = $(".inf-order");
                const subtotal = sumCartTotal();
                const shipping = 0; // Thay đổi giá trị phí vận chuyển nếu cần
                const estimatedTotal = subtotal + shipping;

                divSumary.html(`
                <p>Subtotal</p>
                <p><span>${subtotal.toLocaleString('en-US')}</span> VND</p>
                <p>Standard Shipping</p>
                <p><span>${shipping.toLocaleString('en-US')}</span> VND</p>
                <p>Free when you <a href="login">Sign in</a> or <a href="login">Create an Account</a></p>
                <p></p>
                <p>Estimated Total</p>
                <p><span id="cost-cart">${estimatedTotal.toLocaleString('en-US')}</span> VND</p>
                <p>Taxes finalized at the end of checkout</p>
            `);
            }

            $(".checkout-wapper button").on("click", function () {
                let total = $("#cost-cart").text();
                window.location.href = `/Orders?total=${total}`;
            });

        });

    </script>
}